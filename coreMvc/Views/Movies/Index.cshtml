
@model PaginatedList<coreMvc.Models.Movies>



@{
    ViewData["Title"] = "Index";
}

<h2>Movie List</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-controller="Movies" asp-action="Index" method="get">
    <p>

        <select asp-for="movieGenre" asp-items="Models.genres">
            <option value="">Genre</option>
        </select>
        @*Title: <input type="text" name="SearchString" placeholder="Search by Title">*@
        Title:<input type="text" name="SearchString" placeholder="Search by Title"
               selectBoxOptions="">
        

        <input type="submit" value="Filter" />
    </p>
</form>
<table class="table">

    <thead>
      <tr>
            <th>
               Title
            </th>
            <th>
               Release Date
            </th>
            <th>
                Genre
            </th>
            <th>
                Price
            </th>
        <th>
           Rating
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

